{
  "contractName": "Dex",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextOrderID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderBook",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "enum Dex.Side",
          "name": "side",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenList",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "tokenMapping",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "enum Dex.Side",
          "name": "side",
          "type": "uint8"
        }
      ],
      "name": "getOrderBook",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "enum Dex.Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "ticker",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dex.Order[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Dex.Side",
          "name": "side",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "createLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"createLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getOrderBook\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Dex.Order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextOrderID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenMapping\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/ub3rm/Course/ethereum201/DEX/contracts/dex.sol\":\"Dex\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/ub3rm/Course/ethereum201/DEX/contracts/dex.sol\":{\"keccak256\":\"0x0ea9d82e2980f80814a18aad5949e4310d7833c56db9c6fea8a54948c8326ce9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://205dc03408e01f2a4bb4722f3034d4ae5f4c4bc34b77721340d925f80cc22190\",\"dweb:/ipfs/QmPHWu77vo9RgDLzW5imR32gZwG7RFnwKXvSuoqMdUqvcF\"]},\"/C/Users/ub3rm/Course/ethereum201/DEX/contracts/wallet.sol\":{\"keccak256\":\"0x76c56b0fd5813771ce93992cd42ef386ee5ac0971c4783d0de0a9ee4c712dc9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8188888406d39ebef48843f76aa4d478b4d3d6e95464071647ed3395535575e2\",\"dweb:/ipfs/QmPtUMw9gxtpfRKxjLfANHHH5QpHEsHMeHvtYq3HCqmNnp\"]},\"/C/Users/ub3rm/Course/ethereum201/DEX/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x92468f59eeeedc51e223dcaa0ab282d4ac5ece19e78db053ac902bdb64a2a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://994fdeae44cc3f6fd1d1dbdd5efaf3aed2dc5f85720328b2582a3fbd67ee6f7a\",\"dweb:/ipfs/QmYtKo96bkEqvLwwSbKBgTCdHFKbWpVLzKAnBQH61YdLxQ\"]},\"/C/Users/ub3rm/Course/ethereum201/DEX/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"/C/Users/ub3rm/Course/ethereum201/DEX/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"/C/Users/ub3rm/Course/ethereum201/DEX/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060045534801561001557600080fd5b5060006100266100c960201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100d1565b600033905090565b611b44806100e06000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639776aacf1161008c578063ba58ea6811610066578063ba58ea6814610216578063c9630cb014610246578063f2fde38b14610262578063f47a0acc1461027e576100cf565b80639776aacf146101ae5780639ead7222146101ca578063a8d2021a146101fa576100cf565b80630bb431b6146100d45780631f14df6914610109578063667cb4ba146101395780636f3b62f91461016a578063715018a6146101865780638da5cb5b14610190575b600080fd5b6100ee60048036038101906100e99190611342565b61029c565b6040516101009695949392919061193d565b60405180910390f35b610123600480360381019061011e919061123c565b61032c565b6040516101309190611922565b60405180910390f35b610153600480360381019061014e91906112a1565b610351565b604051610161929190611859565b60405180910390f35b610184600480360381019061017f9190611391565b610395565b005b61018e610625565b005b61019861075f565b6040516101a59190611786565b60405180910390f35b6101c860048036038101906101c391906112ca565b610788565b005b6101e460048036038101906101df91906113f4565b6108c3565b6040516101f1919061183e565b60405180910390f35b610214600480360381019061020f9190611446565b6108e4565b005b610230600480360381019061022b9190611306565b610ad3565b60405161023d919061181c565b60405180910390f35b610260600480360381019061025b9190611446565b610c0d565b005b61027c60048036038101906102779190611213565b610ec9565b005b610286611072565b6040516102939190611922565b60405180910390f35b600560205282600052604060002060205281600052604060002081815481106102c157fe5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b6003602052816000526040600020602052806000526040600020600091509150505481565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600060018111156103a257fe5b8460018111156103ae57fe5b1415610448576103c7818361107890919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054101561044357600080fd5b6104c5565b60018081111561045457fe5b84600181111561046057fe5b14156104c45781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205410156104c357600080fd5b5b5b60006005600085815260200190815260200160002060008660018111156104e857fe5b81526020019081526020016000209050806040518060c0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200187600181111561053457fe5b81526020018681526020018581526020018481525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908360018111156105e757fe5b0217905550606082015181600201556080820151816003015560a0820151816004015550506004600081548092919060010191905055505050505050565b61062d6110e8565b73ffffffffffffffffffffffffffffffffffffffff1661064b61075f565b73ffffffffffffffffffffffffffffffffffffffff16146106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890611902565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107906110e8565b73ffffffffffffffffffffffffffffffffffffffff166107ae61075f565b73ffffffffffffffffffffffffffffffffffffffff1614610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90611902565b60405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060028290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600281815481106108d057fe5b906000526020600020016000915090505481565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561095457600080fd5b6109b782600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020546110f090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055506001600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610a7c9291906117f3565b602060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ace9190611278565b505050565b6060600560008481526020019081526020016000206000836001811115610af657fe5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610c0157838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115610bc557fe5b6001811115610bd057fe5b8152602001600282015481526020016003820154815260200160048201548152505081526020019060010190610b24565b50505050905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c7d57600080fd5b816001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610ced91906117a1565b60206040518083038186803b158015610d0557600080fd5b505afa158015610d19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3d919061141d565b1015610d4857600080fd5b610dab82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205461114090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055506001600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e72939291906117bc565b602060405180830381600087803b158015610e8c57600080fd5b505af1158015610ea0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec49190611278565b505050565b610ed16110e8565b73ffffffffffffffffffffffffffffffffffffffff16610eef61075f565b73ffffffffffffffffffffffffffffffffffffffff1614610f45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3c90611902565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fac90611882565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60045481565b60008083141561108b57600090506110e2565b600082840290508284828161109c57fe5b04146110dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d4906118e2565b60405180910390fd5b809150505b92915050565b600033905090565b600082821115611135576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112c906118c2565b60405180910390fd5b818303905092915050565b60008082840190508381101561118b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611182906118a2565b60405180910390fd5b8091505092915050565b6000813590506111a481611aa2565b92915050565b6000815190506111b981611ab9565b92915050565b6000813590506111ce81611ad0565b92915050565b6000813590506111e381611ae7565b92915050565b6000813590506111f881611af7565b92915050565b60008151905061120d81611af7565b92915050565b60006020828403121561122557600080fd5b600061123384828501611195565b91505092915050565b6000806040838503121561124f57600080fd5b600061125d85828601611195565b925050602061126e858286016111bf565b9150509250929050565b60006020828403121561128a57600080fd5b6000611298848285016111aa565b91505092915050565b6000602082840312156112b357600080fd5b60006112c1848285016111bf565b91505092915050565b600080604083850312156112dd57600080fd5b60006112eb858286016111bf565b92505060206112fc85828601611195565b9150509250929050565b6000806040838503121561131957600080fd5b6000611327858286016111bf565b9250506020611338858286016111d4565b9150509250929050565b60008060006060848603121561135757600080fd5b6000611365868287016111bf565b9350506020611376868287016111e9565b9250506040611387868287016111e9565b9150509250925092565b600080600080608085870312156113a757600080fd5b60006113b5878288016111d4565b94505060206113c6878288016111bf565b93505060406113d7878288016111e9565b92505060606113e8878288016111e9565b91505092959194509250565b60006020828403121561140657600080fd5b6000611414848285016111e9565b91505092915050565b60006020828403121561142f57600080fd5b600061143d848285016111fe565b91505092915050565b6000806040838503121561145957600080fd5b6000611467858286016111e9565b9250506020611478858286016111bf565b9150509250929050565b600061148e83836116ed565b60c08301905092915050565b6114a381611a4d565b82525050565b6114b2816119e8565b82525050565b6114c1816119e8565b82525050565b60006114d2826119ae565b6114dc81856119c6565b93506114e78361199e565b8060005b838110156115185781516114ff8882611482565b975061150a836119b9565b9250506001810190506114eb565b5085935050505092915050565b61152e81611a06565b82525050565b61153d81611a06565b82525050565b61154c81611a5f565b82525050565b61155b81611a5f565b82525050565b600061156e6026836119d7565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115d4601b836119d7565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000611614601e836119d7565b91507f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006000830152602082019050919050565b60006116546021836119d7565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116ba6020836119d7565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60c0820160008201516117036000850182611768565b50602082015161171660208501826114a9565b5060408201516117296040850182611543565b50606082015161173c6060850182611525565b50608082015161174f6080850182611768565b5060a082015161176260a0850182611768565b50505050565b61177181611a43565b82525050565b61178081611a43565b82525050565b600060208201905061179b60008301846114b8565b92915050565b60006020820190506117b6600083018461149a565b92915050565b60006060820190506117d1600083018661149a565b6117de60208301856114b8565b6117eb6040830184611777565b949350505050565b6000604082019050611808600083018561149a565b6118156020830184611777565b9392505050565b6000602082019050818103600083015261183681846114c7565b905092915050565b60006020820190506118536000830184611534565b92915050565b600060408201905061186e6000830185611534565b61187b60208301846114b8565b9392505050565b6000602082019050818103600083015261189b81611561565b9050919050565b600060208201905081810360008301526118bb816115c7565b9050919050565b600060208201905081810360008301526118db81611607565b9050919050565b600060208201905081810360008301526118fb81611647565b9050919050565b6000602082019050818103600083015261191b816116ad565b9050919050565b60006020820190506119376000830184611777565b92915050565b600060c0820190506119526000830189611777565b61195f60208301886114b8565b61196c6040830187611552565b6119796060830186611534565b6119866080830185611777565b61199360a0830184611777565b979650505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006119f382611a23565b9050919050565b60008115159050919050565b6000819050919050565b6000819050611a1e82611a95565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a5882611a71565b9050919050565b6000611a6a82611a10565b9050919050565b6000611a7c82611a83565b9050919050565b6000611a8e82611a23565b9050919050565b60028110611a9f57fe5b50565b611aab816119e8565b8114611ab657600080fd5b50565b611ac2816119fa565b8114611acd57600080fd5b50565b611ad981611a06565b8114611ae457600080fd5b50565b60028110611af457600080fd5b50565b611b0081611a43565b8114611b0b57600080fd5b5056fea26469706673582212206c5aafb19083488171ac9db5bc4f09b9b11c93f0a88d8997308d5cdf7d34efdd64736f6c63430007000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639776aacf1161008c578063ba58ea6811610066578063ba58ea6814610216578063c9630cb014610246578063f2fde38b14610262578063f47a0acc1461027e576100cf565b80639776aacf146101ae5780639ead7222146101ca578063a8d2021a146101fa576100cf565b80630bb431b6146100d45780631f14df6914610109578063667cb4ba146101395780636f3b62f91461016a578063715018a6146101865780638da5cb5b14610190575b600080fd5b6100ee60048036038101906100e99190611342565b61029c565b6040516101009695949392919061193d565b60405180910390f35b610123600480360381019061011e919061123c565b61032c565b6040516101309190611922565b60405180910390f35b610153600480360381019061014e91906112a1565b610351565b604051610161929190611859565b60405180910390f35b610184600480360381019061017f9190611391565b610395565b005b61018e610625565b005b61019861075f565b6040516101a59190611786565b60405180910390f35b6101c860048036038101906101c391906112ca565b610788565b005b6101e460048036038101906101df91906113f4565b6108c3565b6040516101f1919061183e565b60405180910390f35b610214600480360381019061020f9190611446565b6108e4565b005b610230600480360381019061022b9190611306565b610ad3565b60405161023d919061181c565b60405180910390f35b610260600480360381019061025b9190611446565b610c0d565b005b61027c60048036038101906102779190611213565b610ec9565b005b610286611072565b6040516102939190611922565b60405180910390f35b600560205282600052604060002060205281600052604060002081815481106102c157fe5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b6003602052816000526040600020602052806000526040600020600091509150505481565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600060018111156103a257fe5b8460018111156103ae57fe5b1415610448576103c7818361107890919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054101561044357600080fd5b6104c5565b60018081111561045457fe5b84600181111561046057fe5b14156104c45781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205410156104c357600080fd5b5b5b60006005600085815260200190815260200160002060008660018111156104e857fe5b81526020019081526020016000209050806040518060c0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200187600181111561053457fe5b81526020018681526020018581526020018481525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908360018111156105e757fe5b0217905550606082015181600201556080820151816003015560a0820151816004015550506004600081548092919060010191905055505050505050565b61062d6110e8565b73ffffffffffffffffffffffffffffffffffffffff1661064b61075f565b73ffffffffffffffffffffffffffffffffffffffff16146106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890611902565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107906110e8565b73ffffffffffffffffffffffffffffffffffffffff166107ae61075f565b73ffffffffffffffffffffffffffffffffffffffff1614610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90611902565b60405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060028290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600281815481106108d057fe5b906000526020600020016000915090505481565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561095457600080fd5b6109b782600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020546110f090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055506001600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610a7c9291906117f3565b602060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ace9190611278565b505050565b6060600560008481526020019081526020016000206000836001811115610af657fe5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610c0157838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115610bc557fe5b6001811115610bd057fe5b8152602001600282015481526020016003820154815260200160048201548152505081526020019060010190610b24565b50505050905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c7d57600080fd5b816001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610ced91906117a1565b60206040518083038186803b158015610d0557600080fd5b505afa158015610d19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3d919061141d565b1015610d4857600080fd5b610dab82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205461114090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055506001600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e72939291906117bc565b602060405180830381600087803b158015610e8c57600080fd5b505af1158015610ea0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec49190611278565b505050565b610ed16110e8565b73ffffffffffffffffffffffffffffffffffffffff16610eef61075f565b73ffffffffffffffffffffffffffffffffffffffff1614610f45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3c90611902565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fac90611882565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60045481565b60008083141561108b57600090506110e2565b600082840290508284828161109c57fe5b04146110dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d4906118e2565b60405180910390fd5b809150505b92915050565b600033905090565b600082821115611135576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112c906118c2565b60405180910390fd5b818303905092915050565b60008082840190508381101561118b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611182906118a2565b60405180910390fd5b8091505092915050565b6000813590506111a481611aa2565b92915050565b6000815190506111b981611ab9565b92915050565b6000813590506111ce81611ad0565b92915050565b6000813590506111e381611ae7565b92915050565b6000813590506111f881611af7565b92915050565b60008151905061120d81611af7565b92915050565b60006020828403121561122557600080fd5b600061123384828501611195565b91505092915050565b6000806040838503121561124f57600080fd5b600061125d85828601611195565b925050602061126e858286016111bf565b9150509250929050565b60006020828403121561128a57600080fd5b6000611298848285016111aa565b91505092915050565b6000602082840312156112b357600080fd5b60006112c1848285016111bf565b91505092915050565b600080604083850312156112dd57600080fd5b60006112eb858286016111bf565b92505060206112fc85828601611195565b9150509250929050565b6000806040838503121561131957600080fd5b6000611327858286016111bf565b9250506020611338858286016111d4565b9150509250929050565b60008060006060848603121561135757600080fd5b6000611365868287016111bf565b9350506020611376868287016111e9565b9250506040611387868287016111e9565b9150509250925092565b600080600080608085870312156113a757600080fd5b60006113b5878288016111d4565b94505060206113c6878288016111bf565b93505060406113d7878288016111e9565b92505060606113e8878288016111e9565b91505092959194509250565b60006020828403121561140657600080fd5b6000611414848285016111e9565b91505092915050565b60006020828403121561142f57600080fd5b600061143d848285016111fe565b91505092915050565b6000806040838503121561145957600080fd5b6000611467858286016111e9565b9250506020611478858286016111bf565b9150509250929050565b600061148e83836116ed565b60c08301905092915050565b6114a381611a4d565b82525050565b6114b2816119e8565b82525050565b6114c1816119e8565b82525050565b60006114d2826119ae565b6114dc81856119c6565b93506114e78361199e565b8060005b838110156115185781516114ff8882611482565b975061150a836119b9565b9250506001810190506114eb565b5085935050505092915050565b61152e81611a06565b82525050565b61153d81611a06565b82525050565b61154c81611a5f565b82525050565b61155b81611a5f565b82525050565b600061156e6026836119d7565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115d4601b836119d7565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000611614601e836119d7565b91507f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006000830152602082019050919050565b60006116546021836119d7565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116ba6020836119d7565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60c0820160008201516117036000850182611768565b50602082015161171660208501826114a9565b5060408201516117296040850182611543565b50606082015161173c6060850182611525565b50608082015161174f6080850182611768565b5060a082015161176260a0850182611768565b50505050565b61177181611a43565b82525050565b61178081611a43565b82525050565b600060208201905061179b60008301846114b8565b92915050565b60006020820190506117b6600083018461149a565b92915050565b60006060820190506117d1600083018661149a565b6117de60208301856114b8565b6117eb6040830184611777565b949350505050565b6000604082019050611808600083018561149a565b6118156020830184611777565b9392505050565b6000602082019050818103600083015261183681846114c7565b905092915050565b60006020820190506118536000830184611534565b92915050565b600060408201905061186e6000830185611534565b61187b60208301846114b8565b9392505050565b6000602082019050818103600083015261189b81611561565b9050919050565b600060208201905081810360008301526118bb816115c7565b9050919050565b600060208201905081810360008301526118db81611607565b9050919050565b600060208201905081810360008301526118fb81611647565b9050919050565b6000602082019050818103600083015261191b816116ad565b9050919050565b60006020820190506119376000830184611777565b92915050565b600060c0820190506119526000830189611777565b61195f60208301886114b8565b61196c6040830187611552565b6119796060830186611534565b6119866080830185611777565b61199360a0830184611777565b979650505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006119f382611a23565b9050919050565b60008115159050919050565b6000819050919050565b6000819050611a1e82611a95565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a5882611a71565b9050919050565b6000611a6a82611a10565b9050919050565b6000611a7c82611a83565b9050919050565b6000611a8e82611a23565b9050919050565b60028110611a9f57fe5b50565b611aab816119e8565b8114611ab657600080fd5b50565b611ac2816119fa565b8114611acd57600080fd5b50565b611ad981611a06565b8114611ae457600080fd5b50565b60028110611af457600080fd5b50565b611b0081611a43565b8114611b0b57600080fd5b5056fea26469706673582212206c5aafb19083488171ac9db5bc4f09b9b11c93f0a88d8997308d5cdf7d34efdd64736f6c63430007000033",
  "immutableReferences": {},
  "sourceMap": "133:1069:0:-:0;;;445:1;419:27;;133:1069;;;;;;;;;;875:17:2;895:12;:10;;;:12;;:::i;:::-;875:32;;926:9;917:6;;:18;;;;;;;;;;;;;;;;;;983:9;950:43;;979:1;950:43;;;;;;;;;;;;850:150;133:1069:0;;598:104:5;651:15;685:10;678:17;;598:104;:::o;133:1069:0:-;;;;;;;",
  "deployedSourceMap": "133:1069:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;455:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;524:63:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;437:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;673:523:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1708:145:2;;;:::i;:::-;;1076:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;749:177:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;489:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1349:304;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;525:140:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;934:407:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2002:240:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;419:27:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;455:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;524:63:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;437:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;673:523:0:-;780:8;772:16;;;;;;;;:4;:16;;;;;;;;;769:216;;;844:17;855:5;844:6;:10;;:17;;;;:::i;:::-;813:8;:20;822:10;813:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:48;;805:57;;;;;;769:216;;;900:9;892:17;;;;;;;;:4;:17;;;;;;;;;889:96;;;966:6;934:8;:20;943:10;934:20;;;;;;;;;;;;;;;:28;955:6;934:28;;;;;;;;;;;;:38;;926:47;;;;;;889:96;769:216;995:22;1020:9;:17;1030:6;1020:17;;;;;;;;;;;:29;1043:4;1038:10;;;;;;;;1020:29;;;;;;;;;;;995:54;;1060:6;1086:59;;;;;;;;1092:11;;1086:59;;;;1105:10;1086:59;;;;;;1117:4;1086:59;;;;;;;;;;;;1123:6;1086:59;;;;1131:6;1086:59;;;;1139:5;1086:59;;;1060:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:11;;:13;;;;;;;;;;;;;673:523;;;;;:::o;1708:145:2:-;1299:12;:10;:12::i;:::-;1288:23;;:7;:5;:7::i;:::-;:23;;;1280:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1814:1:::1;1777:40;;1798:6;::::0;::::1;;;;;;;;1777:40;;;;;;;;;;;;1844:1;1827:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1708:145::o:0;1076:85::-;1122:7;1148:6;;;;;;;;;;;1141:13;;1076:85;:::o;749:177:1:-;1299:12:2;:10;:12::i;:::-;1288:23;;:7;:5;:7::i;:::-;:23;;;1280:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;858:27:1::1;;;;;;;;864:6;858:27;;;;872:12;858:27;;;;::::0;835:12:::1;:20;848:6;835:20;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:9;911:6;896:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;749:177:::0;;:::o;489:26::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1349:304::-;1469:1;1424:47;;:12;:20;1437:6;1424:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;1416:56;;;;;;1524:40;1557:6;1524:8;:20;1533:10;1524:20;;;;;;;;;;;;;;;:28;1545:6;1524:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;1493:8;:20;1502:10;1493:20;;;;;;;;;;;;;;;:28;1514:6;1493:28;;;;;;;;;;;:71;;;;1582:12;:20;1595:6;1582:20;;;;;;;;;;;:33;;;;;;;;;;;;1575:50;;;1626:10;1638:6;1575:70;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1349:304;;:::o;525:140:0:-;594:14;628:9;:17;638:6;628:17;;;;;;;;;;;:29;651:4;646:10;;;;;;;;628:29;;;;;;;;;;;621:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:140;;;;:::o;934:407:1:-;1053:1;1008:47;;:12;:20;1021:6;1008:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;1000:56;;;;;;1142:6;1082:12;:20;1095:6;1082:20;;;;;;;;;;;:33;;;;;;;;;;;;1075:51;;;1127:10;1075:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;1067:82;;;;;;1193:40;1226:6;1193:8;:20;1202:10;1193:20;;;;;;;;;;;;;;;:28;1214:6;1193:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;1162:8;:20;1171:10;1162:20;;;;;;;;;;;;;;;:28;1183:6;1162:28;;;;;;;;;;;:71;;;;1251:12;:20;1264:6;1251:20;;;;;;;;;;;:33;;;;;;;;;;;;1244:54;;;1299:10;1319:4;1326:6;1244:89;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;934:407;;:::o;2002:240:2:-;1299:12;:10;:12::i;:::-;1288:23;;:7;:5;:7::i;:::-;:23;;;1280:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:1:::1;2090:22;;:8;:22;;;;2082:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2199:8;2170:38;;2191:6;::::0;::::1;;;;;;;;2170:38;;;;;;;;;;;;2227:8;2218:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2002:240:::0;:::o;419:27:0:-;;;;:::o;3538:215:3:-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;598:104:5:-;651:15;685:10;678:17;;598:104;:::o;3136:155:3:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:128::-;;223:6;217:13;208:22;;235:30;259:5;235:30;:::i;:::-;202:68;;;;:::o;277:130::-;;357:6;344:20;335:29;;369:33;396:5;369:33;:::i;:::-;329:78;;;;:::o;414:144::-;;501:6;488:20;479:29;;513:40;547:5;513:40;:::i;:::-;473:85;;;;:::o;565:130::-;;645:6;632:20;623:29;;657:33;684:5;657:33;:::i;:::-;617:78;;;;:::o;702:134::-;;786:6;780:13;771:22;;798:33;825:5;798:33;:::i;:::-;765:71;;;;:::o;843:241::-;;947:2;935:9;926:7;922:23;918:32;915:2;;;963:1;960;953:12;915:2;998:1;1015:53;1060:7;1051:6;1040:9;1036:22;1015:53;:::i;:::-;1005:63;;977:97;909:175;;;;:::o;1091:366::-;;;1212:2;1200:9;1191:7;1187:23;1183:32;1180:2;;;1228:1;1225;1218:12;1180:2;1263:1;1280:53;1325:7;1316:6;1305:9;1301:22;1280:53;:::i;:::-;1270:63;;1242:97;1370:2;1388:53;1433:7;1424:6;1413:9;1409:22;1388:53;:::i;:::-;1378:63;;1349:98;1174:283;;;;;:::o;1464:257::-;;1576:2;1564:9;1555:7;1551:23;1547:32;1544:2;;;1592:1;1589;1582:12;1544:2;1627:1;1644:61;1697:7;1688:6;1677:9;1673:22;1644:61;:::i;:::-;1634:71;;1606:105;1538:183;;;;:::o;1728:241::-;;1832:2;1820:9;1811:7;1807:23;1803:32;1800:2;;;1848:1;1845;1838:12;1800:2;1883:1;1900:53;1945:7;1936:6;1925:9;1921:22;1900:53;:::i;:::-;1890:63;;1862:97;1794:175;;;;:::o;1976:366::-;;;2097:2;2085:9;2076:7;2072:23;2068:32;2065:2;;;2113:1;2110;2103:12;2065:2;2148:1;2165:53;2210:7;2201:6;2190:9;2186:22;2165:53;:::i;:::-;2155:63;;2127:97;2255:2;2273:53;2318:7;2309:6;2298:9;2294:22;2273:53;:::i;:::-;2263:63;;2234:98;2059:283;;;;;:::o;2349:380::-;;;2477:2;2465:9;2456:7;2452:23;2448:32;2445:2;;;2493:1;2490;2483:12;2445:2;2528:1;2545:53;2590:7;2581:6;2570:9;2566:22;2545:53;:::i;:::-;2535:63;;2507:97;2635:2;2653:60;2705:7;2696:6;2685:9;2681:22;2653:60;:::i;:::-;2643:70;;2614:105;2439:290;;;;;:::o;2736:491::-;;;;2874:2;2862:9;2853:7;2849:23;2845:32;2842:2;;;2890:1;2887;2880:12;2842:2;2925:1;2942:53;2987:7;2978:6;2967:9;2963:22;2942:53;:::i;:::-;2932:63;;2904:97;3032:2;3050:53;3095:7;3086:6;3075:9;3071:22;3050:53;:::i;:::-;3040:63;;3011:98;3140:2;3158:53;3203:7;3194:6;3183:9;3179:22;3158:53;:::i;:::-;3148:63;;3119:98;2836:391;;;;;:::o;3234:631::-;;;;;3396:3;3384:9;3375:7;3371:23;3367:33;3364:2;;;3413:1;3410;3403:12;3364:2;3448:1;3465:60;3517:7;3508:6;3497:9;3493:22;3465:60;:::i;:::-;3455:70;;3427:104;3562:2;3580:53;3625:7;3616:6;3605:9;3601:22;3580:53;:::i;:::-;3570:63;;3541:98;3670:2;3688:53;3733:7;3724:6;3713:9;3709:22;3688:53;:::i;:::-;3678:63;;3649:98;3778:2;3796:53;3841:7;3832:6;3821:9;3817:22;3796:53;:::i;:::-;3786:63;;3757:98;3358:507;;;;;;;:::o;3872:241::-;;3976:2;3964:9;3955:7;3951:23;3947:32;3944:2;;;3992:1;3989;3982:12;3944:2;4027:1;4044:53;4089:7;4080:6;4069:9;4065:22;4044:53;:::i;:::-;4034:63;;4006:97;3938:175;;;;:::o;4120:263::-;;4235:2;4223:9;4214:7;4210:23;4206:32;4203:2;;;4251:1;4248;4241:12;4203:2;4286:1;4303:64;4359:7;4350:6;4339:9;4335:22;4303:64;:::i;:::-;4293:74;;4265:108;4197:186;;;;:::o;4390:366::-;;;4511:2;4499:9;4490:7;4486:23;4482:32;4479:2;;;4527:1;4524;4517:12;4479:2;4562:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4541:97;4669:2;4687:53;4732:7;4723:6;4712:9;4708:22;4687:53;:::i;:::-;4677:63;;4648:98;4473:283;;;;;:::o;4764:257::-;;4893:88;4977:3;4969:6;4893:88;:::i;:::-;5010:4;5005:3;5001:14;4987:28;;4886:135;;;;:::o;5029:142::-;5120:45;5159:5;5120:45;:::i;:::-;5115:3;5108:58;5102:69;;:::o;5178:103::-;5251:24;5269:5;5251:24;:::i;:::-;5246:3;5239:37;5233:48;;:::o;5288:113::-;5371:24;5389:5;5371:24;:::i;:::-;5366:3;5359:37;5353:48;;:::o;5457:858::-;;5644:75;5713:5;5644:75;:::i;:::-;5732:107;5832:6;5827:3;5732:107;:::i;:::-;5725:114;;5860:77;5931:5;5860:77;:::i;:::-;5957:7;5985:1;5970:323;5995:6;5992:1;5989:13;5970:323;;;6062:6;6056:13;6083:105;6184:3;6169:13;6083:105;:::i;:::-;6076:112;;6205:81;6279:6;6205:81;:::i;:::-;6195:91;;6027:266;6017:1;6014;6010:9;6005:14;;5970:323;;;5974:14;6306:3;6299:10;;5623:692;;;;;;;:::o;6323:103::-;6396:24;6414:5;6396:24;:::i;:::-;6391:3;6384:37;6378:48;;:::o;6433:113::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6498:48;;:::o;6553:126::-;6631:42;6667:5;6631:42;:::i;:::-;6626:3;6619:55;6613:66;;:::o;6686:136::-;6774:42;6810:5;6774:42;:::i;:::-;6769:3;6762:55;6756:66;;:::o;6830:375::-;;6990:67;7054:2;7049:3;6990:67;:::i;:::-;6983:74;;7090:34;7086:1;7081:3;7077:11;7070:55;7159:8;7154:2;7149:3;7145:12;7138:30;7196:2;7191:3;7187:12;7180:19;;6976:229;;;:::o;7214:327::-;;7374:67;7438:2;7433:3;7374:67;:::i;:::-;7367:74;;7474:29;7470:1;7465:3;7461:11;7454:50;7532:2;7527:3;7523:12;7516:19;;7360:181;;;:::o;7550:330::-;;7710:67;7774:2;7769:3;7710:67;:::i;:::-;7703:74;;7810:32;7806:1;7801:3;7797:11;7790:53;7871:2;7866:3;7862:12;7855:19;;7696:184;;;:::o;7889:370::-;;8049:67;8113:2;8108:3;8049:67;:::i;:::-;8042:74;;8149:34;8145:1;8140:3;8136:11;8129:55;8218:3;8213:2;8208:3;8204:12;8197:25;8250:2;8245:3;8241:12;8234:19;;8035:224;;;:::o;8268:332::-;;8428:67;8492:2;8487:3;8428:67;:::i;:::-;8421:74;;8528:34;8524:1;8519:3;8515:11;8508:55;8591:2;8586:3;8582:12;8575:19;;8414:186;;;:::o;8651:1084::-;8776:4;8771:3;8767:14;8857:4;8850:5;8846:16;8840:23;8869:63;8926:4;8921:3;8917:14;8903:12;8869:63;:::i;:::-;8796:142;9013:4;9006:5;9002:16;8996:23;9025:63;9082:4;9077:3;9073:14;9059:12;9025:63;:::i;:::-;8948:146;9167:4;9160:5;9156:16;9150:23;9179:68;9241:4;9236:3;9232:14;9218:12;9179:68;:::i;:::-;9104:149;9328:4;9321:5;9317:16;9311:23;9340:63;9397:4;9392:3;9388:14;9374:12;9340:63;:::i;:::-;9263:146;9484:4;9477:5;9473:16;9467:23;9496:63;9553:4;9548:3;9544:14;9530:12;9496:63;:::i;:::-;9419:146;9639:4;9632:5;9628:16;9622:23;9651:63;9708:4;9703:3;9699:14;9685:12;9651:63;:::i;:::-;9575:145;8749:986;;;:::o;9742:103::-;9815:24;9833:5;9815:24;:::i;:::-;9810:3;9803:37;9797:48;;:::o;9852:113::-;9935:24;9953:5;9935:24;:::i;:::-;9930:3;9923:37;9917:48;;:::o;9972:222::-;;10099:2;10088:9;10084:18;10076:26;;10113:71;10181:1;10170:9;10166:17;10157:6;10113:71;:::i;:::-;10070:124;;;;:::o;10201:238::-;;10336:2;10325:9;10321:18;10313:26;;10350:79;10426:1;10415:9;10411:17;10402:6;10350:79;:::i;:::-;10307:132;;;;:::o;10446:460::-;;10637:2;10626:9;10622:18;10614:26;;10651:79;10727:1;10716:9;10712:17;10703:6;10651:79;:::i;:::-;10741:72;10809:2;10798:9;10794:18;10785:6;10741:72;:::i;:::-;10824;10892:2;10881:9;10877:18;10868:6;10824:72;:::i;:::-;10608:298;;;;;;:::o;10913:349::-;;11076:2;11065:9;11061:18;11053:26;;11090:79;11166:1;11155:9;11151:17;11142:6;11090:79;:::i;:::-;11180:72;11248:2;11237:9;11233:18;11224:6;11180:72;:::i;:::-;11047:215;;;;;:::o;11269:454::-;;11488:2;11477:9;11473:18;11465:26;;11538:9;11532:4;11528:20;11524:1;11513:9;11509:17;11502:47;11563:150;11708:4;11699:6;11563:150;:::i;:::-;11555:158;;11459:264;;;;:::o;11730:222::-;;11857:2;11846:9;11842:18;11834:26;;11871:71;11939:1;11928:9;11924:17;11915:6;11871:71;:::i;:::-;11828:124;;;;:::o;11959:333::-;;12114:2;12103:9;12099:18;12091:26;;12128:71;12196:1;12185:9;12181:17;12172:6;12128:71;:::i;:::-;12210:72;12278:2;12267:9;12263:18;12254:6;12210:72;:::i;:::-;12085:207;;;;;:::o;12299:416::-;;12499:2;12488:9;12484:18;12476:26;;12549:9;12543:4;12539:20;12535:1;12524:9;12520:17;12513:47;12574:131;12700:4;12574:131;:::i;:::-;12566:139;;12470:245;;;:::o;12722:416::-;;12922:2;12911:9;12907:18;12899:26;;12972:9;12966:4;12962:20;12958:1;12947:9;12943:17;12936:47;12997:131;13123:4;12997:131;:::i;:::-;12989:139;;12893:245;;;:::o;13145:416::-;;13345:2;13334:9;13330:18;13322:26;;13395:9;13389:4;13385:20;13381:1;13370:9;13366:17;13359:47;13420:131;13546:4;13420:131;:::i;:::-;13412:139;;13316:245;;;:::o;13568:416::-;;13768:2;13757:9;13753:18;13745:26;;13818:9;13812:4;13808:20;13804:1;13793:9;13789:17;13782:47;13843:131;13969:4;13843:131;:::i;:::-;13835:139;;13739:245;;;:::o;13991:416::-;;14191:2;14180:9;14176:18;14168:26;;14241:9;14235:4;14231:20;14227:1;14216:9;14212:17;14205:47;14266:131;14392:4;14266:131;:::i;:::-;14258:139;;14162:245;;;:::o;14414:222::-;;14541:2;14530:9;14526:18;14518:26;;14555:71;14623:1;14612:9;14608:17;14599:6;14555:71;:::i;:::-;14512:124;;;;:::o;14643:790::-;;14915:3;14904:9;14900:19;14892:27;;14930:71;14998:1;14987:9;14983:17;14974:6;14930:71;:::i;:::-;15012:72;15080:2;15069:9;15065:18;15056:6;15012:72;:::i;:::-;15095:77;15168:2;15157:9;15153:18;15144:6;15095:77;:::i;:::-;15183:72;15251:2;15240:9;15236:18;15227:6;15183:72;:::i;:::-;15266:73;15334:3;15323:9;15319:19;15310:6;15266:73;:::i;:::-;15350;15418:3;15407:9;15403:19;15394:6;15350:73;:::i;:::-;14886:547;;;;;;;;;:::o;15440:172::-;;15547:3;15539:11;;15585:4;15580:3;15576:14;15568:22;;15533:79;;;:::o;15619:158::-;;15749:5;15743:12;15733:22;;15714:63;;;:::o;15784:129::-;;15903:4;15898:3;15894:14;15886:22;;15880:33;;;:::o;15921:199::-;;16072:6;16067:3;16060:19;16109:4;16104:3;16100:14;16085:29;;16053:67;;;;:::o;16129:163::-;;16244:6;16239:3;16232:19;16281:4;16276:3;16272:14;16257:29;;16225:67;;;;:::o;16300:91::-;;16362:24;16380:5;16362:24;:::i;:::-;16351:35;;16345:46;;;:::o;16398:85::-;;16471:5;16464:13;16457:21;16446:32;;16440:43;;;:::o;16490:72::-;;16552:5;16541:16;;16535:27;;;:::o;16569:120::-;;16638:5;16627:16;;16644:40;16678:5;16644:40;:::i;:::-;16621:68;;;:::o;16696:121::-;;16769:42;16762:5;16758:54;16747:65;;16741:76;;;:::o;16824:72::-;;16886:5;16875:16;;16869:27;;;:::o;16903:129::-;;16990:37;17021:5;16990:37;:::i;:::-;16977:50;;16971:61;;;:::o;17039:120::-;;17123:31;17148:5;17123:31;:::i;:::-;17110:44;;17104:55;;;:::o;17166:121::-;;17245:37;17276:5;17245:37;:::i;:::-;17232:50;;17226:61;;;:::o;17294:108::-;;17373:24;17391:5;17373:24;:::i;:::-;17360:37;;17354:48;;;:::o;17409:98::-;17485:1;17478:5;17475:12;17465:2;;17491:9;17465:2;17459:48;:::o;17514:117::-;17583:24;17601:5;17583:24;:::i;:::-;17576:5;17573:35;17563:2;;17622:1;17619;17612:12;17563:2;17557:74;:::o;17638:111::-;17704:21;17719:5;17704:21;:::i;:::-;17697:5;17694:32;17684:2;;17740:1;17737;17730:12;17684:2;17678:71;:::o;17756:117::-;17825:24;17843:5;17825:24;:::i;:::-;17818:5;17815:35;17805:2;;17864:1;17861;17854:12;17805:2;17799:74;:::o;17880:101::-;17956:1;17949:5;17946:12;17936:2;;17972:1;17969;17962:12;17936:2;17930:51;:::o;17988:117::-;18057:24;18075:5;18057:24;:::i;:::-;18050:5;18047:35;18037:2;;18096:1;18093;18086:12;18037:2;18031:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >= 0.6.0 < 0.8.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./wallet.sol\";\r\n\r\n\r\ncontract Dex is Wallet {\r\n    using SafeMath for uint256;\r\n\r\n    enum Side {\r\n        BUY,\r\n        SELL   \r\n    }\r\n    \r\n    struct Order {\r\n        uint id;\r\n        address trader;\r\n        Side side;\r\n        bytes32 ticker;\r\n        uint amount;\r\n        uint price;\r\n    }\r\n\r\n    uint public nextOrderID = 0;\r\n\r\n    mapping(bytes32 => mapping(uint => Order[])) public orderBook;\r\n\r\n    function getOrderBook(bytes32 ticker, Side side) view public returns(Order[] memory) {\r\n        return orderBook[ticker][uint(side)];\r\n    }\r\n\r\n    function createLimitOrder(Side side, bytes32 ticker, uint amount, uint price) public {\r\n        if(side == Side.BUY) {\r\n            require(balances[msg.sender][\"ETH\"] >= amount.mul(price));\r\n        }\r\n        else if(side == Side.SELL) {\r\n            require(balances[msg.sender][ticker] >= amount);\r\n        }\r\n        Order[] storage orders = orderBook[ticker][uint(side)];\r\n        orders.push(\r\n            Order(nextOrderID, msg.sender, side, ticker, amount, price)\r\n            );\r\n        nextOrderID++;\r\n        } \r\n\r\n}\r\n",
  "sourcePath": "C:/Users/ub3rm/Course/ethereum201/DEX/contracts/dex.sol",
  "ast": {
    "absolutePath": "/C/Users/ub3rm/Course/ethereum201/DEX/contracts/dex.sol",
    "exportedSymbols": {
      "Dex": [
        134
      ]
    },
    "id": 135,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "68:33:0"
      },
      {
        "absolutePath": "/C/Users/ub3rm/Course/ethereum201/DEX/contracts/wallet.sol",
        "file": "./wallet.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 135,
        "sourceUnit": 325,
        "src": "105:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Wallet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 324,
              "src": "149:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wallet_$324",
                "typeString": "contract Wallet"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "149:6:0"
          }
        ],
        "contractDependencies": [
          324,
          434,
          890
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 134,
        "linearizedBaseContracts": [
          134,
          324,
          434,
          890
        ],
        "name": "Dex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "contractScope": null,
              "id": 6,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 789,
              "src": "169:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$789",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "163:27:0",
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "182:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Dex.Side",
            "id": 11,
            "members": [
              {
                "id": 9,
                "name": "BUY",
                "nodeType": "EnumValue",
                "src": "219:3:0"
              },
              {
                "id": 10,
                "name": "SELL",
                "nodeType": "EnumValue",
                "src": "233:4:0"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "198:49:0"
          },
          {
            "canonicalName": "Dex.Order",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 24,
                "src": "283:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "283:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "trader",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 24,
                "src": "301:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "301:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "side",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 24,
                "src": "326:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$11",
                  "typeString": "enum Dex.Side"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 16,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 11,
                  "src": "326:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$11",
                    "typeString": "enum Dex.Side"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "ticker",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 24,
                "src": "346:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 18,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 24,
                "src": "371:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "371:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 24,
                "src": "393:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "393:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Order",
            "nodeType": "StructDefinition",
            "scope": 134,
            "src": "259:152:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f47a0acc",
            "id": 27,
            "mutability": "mutable",
            "name": "nextOrderID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 134,
            "src": "419:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "419:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "445:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0bb431b6",
            "id": 34,
            "mutability": "mutable",
            "name": "orderBook",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 134,
            "src": "455:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
              "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 28,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "463:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "455:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
                "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
              },
              "valueType": {
                "id": 32,
                "keyType": {
                  "id": 29,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "482:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "474:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$",
                  "typeString": "mapping(uint256 => struct Dex.Order[])"
                },
                "valueType": {
                  "baseType": {
                    "contractScope": null,
                    "id": 30,
                    "name": "Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 24,
                    "src": "490:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                      "typeString": "struct Dex.Order"
                    }
                  },
                  "id": 31,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "490:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.Order[]"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "610:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 44,
                        "name": "orderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "628:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))"
                        }
                      },
                      "id": 46,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "638:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "628:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                      }
                    },
                    "id": 51,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 49,
                          "name": "side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "651:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        ],
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "646:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 47,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "646:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "646:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "628:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage",
                      "typeString": "struct Dex.Order storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 43,
                  "id": 52,
                  "nodeType": "Return",
                  "src": "621:36:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ba58ea68",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBook",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "547:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "side",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "563:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$11",
                    "typeString": "enum Dex.Side"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 37,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11,
                    "src": "563:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "546:27:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "594:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 40,
                      "name": "Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 24,
                      "src": "594:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                        "typeString": "struct Dex.Order"
                      }
                    },
                    "id": 41,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "594:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "593:16:0"
            },
            "scope": 134,
            "src": "525:140:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "758:438:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 65,
                      "name": "side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "772:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "Side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "780:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Side_$11_$",
                          "typeString": "type(enum Dex.Side)"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BUY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "780:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "src": "772:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "892:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$11",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 85,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "900:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$11_$",
                            "typeString": "type(enum Dex.Side)"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SELL",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "900:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$11",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "src": "892:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 100,
                    "nodeType": "IfStatement",
                    "src": "889:96:0",
                    "trueBody": {
                      "id": 99,
                      "nodeType": "Block",
                      "src": "911:74:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 96,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 89,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 162,
                                      "src": "934:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(bytes32 => uint256))"
                                      }
                                    },
                                    "id": 92,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 90,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "943:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 91,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "943:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "934:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                      "typeString": "mapping(bytes32 => uint256)"
                                    }
                                  },
                                  "id": 94,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 93,
                                    "name": "ticker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58,
                                    "src": "955:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "934:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 95,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "966:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "934:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 88,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "926:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                "typeString": "function (bool) pure"
                              }
                            },
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "926:47:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 98,
                          "nodeType": "ExpressionStatement",
                          "src": "926:47:0"
                        }
                      ]
                    }
                  },
                  "id": 101,
                  "nodeType": "IfStatement",
                  "src": "769:216:0",
                  "trueBody": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "790:84:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 70,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 162,
                                    "src": "813:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(bytes32 => uint256))"
                                    }
                                  },
                                  "id": 73,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 71,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "822:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 72,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "822:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "813:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                    "typeString": "mapping(bytes32 => uint256)"
                                  }
                                },
                                "id": 75,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "455448",
                                  "id": 74,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "834:5:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                    "typeString": "literal_string \"ETH\""
                                  },
                                  "value": "ETH"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "813:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 78,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62,
                                    "src": "855:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 76,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60,
                                    "src": "844:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 77,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 672,
                                  "src": "844:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "844:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "813:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 69,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "805:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "805:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 82,
                        "nodeType": "ExpressionStatement",
                        "src": "805:57:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "orders",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 132,
                      "src": "995:22:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                        "typeString": "struct Dex.Order[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 103,
                          "name": "Order",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 24,
                          "src": "995:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                            "typeString": "struct Dex.Order"
                          }
                        },
                        "id": 104,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "995:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.Order[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 114,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "orderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1020:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1030:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1020:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                      }
                    },
                    "id": 113,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 111,
                          "name": "side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1043:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        ],
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1038:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1038:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1038:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1020:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage",
                      "typeString": "struct Dex.Order storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "995:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 119,
                            "name": "nextOrderID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1092:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 120,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1105:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1105:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 122,
                            "name": "side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "1117:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$11",
                              "typeString": "enum Dex.Side"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "ticker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "1123:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 124,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "1131:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "1139:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_enum$_Side_$11",
                              "typeString": "enum Dex.Side"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 118,
                          "name": "Order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "1086:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Order_$24_storage_ptr_$",
                            "typeString": "type(struct Dex.Order storage pointer)"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1086:59:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                          "typeString": "struct Dex.Order memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                          "typeString": "struct Dex.Order memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1060:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1060:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Order_$24_storage_$returns$__$",
                        "typeString": "function (struct Dex.Order storage ref)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:100:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:100:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1171:13:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 129,
                      "name": "nextOrderID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1171:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1171:13:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6f3b62f9",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLimitOrder",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "side",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "699:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$11",
                    "typeString": "enum Dex.Side"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 55,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11,
                    "src": "699:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "710:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "726:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "739:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "698:52:0"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:0:0"
            },
            "scope": 134,
            "src": "673:523:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 135,
        "src": "133:1069:0"
      }
    ],
    "src": "33:1171:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/ub3rm/Course/ethereum201/DEX/contracts/dex.sol",
      "exportedSymbols": {
        "Dex": [
          134
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "68:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 325,
          "absolutePath": "/C/Users/ub3rm/Course/ethereum201/DEX/contracts/wallet.sol",
          "file": "./wallet.sol",
          "scope": 135,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "105:22:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            324,
            434,
            890
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            134,
            324,
            434,
            890
          ],
          "name": "Dex",
          "scope": 135
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Wallet",
                  "referencedDeclaration": 324,
                  "type": "contract Wallet"
                },
                "id": 4,
                "name": "UserDefinedTypeName",
                "src": "149:6:0"
              }
            ],
            "id": 5,
            "name": "InheritanceSpecifier",
            "src": "149:6:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 789,
                  "type": "library SafeMath"
                },
                "id": 6,
                "name": "UserDefinedTypeName",
                "src": "169:8:0"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7,
                "name": "ElementaryTypeName",
                "src": "182:7:0"
              }
            ],
            "id": 8,
            "name": "UsingForDirective",
            "src": "163:27:0"
          },
          {
            "attributes": {
              "canonicalName": "Dex.Side",
              "name": "Side"
            },
            "children": [
              {
                "attributes": {
                  "name": "BUY"
                },
                "id": 9,
                "name": "EnumValue",
                "src": "219:3:0"
              },
              {
                "attributes": {
                  "name": "SELL"
                },
                "id": 10,
                "name": "EnumValue",
                "src": "233:4:0"
              }
            ],
            "id": 11,
            "name": "EnumDefinition",
            "src": "198:49:0"
          },
          {
            "attributes": {
              "canonicalName": "Dex.Order",
              "name": "Order",
              "scope": 134,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "id",
                  "overrides": null,
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 12,
                    "name": "ElementaryTypeName",
                    "src": "283:4:0"
                  }
                ],
                "id": 13,
                "name": "VariableDeclaration",
                "src": "283:7:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "trader",
                  "overrides": null,
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 14,
                    "name": "ElementaryTypeName",
                    "src": "301:7:0"
                  }
                ],
                "id": 15,
                "name": "VariableDeclaration",
                "src": "301:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "side",
                  "overrides": null,
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum Dex.Side",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Side",
                      "referencedDeclaration": 11,
                      "type": "enum Dex.Side"
                    },
                    "id": 16,
                    "name": "UserDefinedTypeName",
                    "src": "326:4:0"
                  }
                ],
                "id": 17,
                "name": "VariableDeclaration",
                "src": "326:9:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "ticker",
                  "overrides": null,
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 18,
                    "name": "ElementaryTypeName",
                    "src": "346:7:0"
                  }
                ],
                "id": 19,
                "name": "VariableDeclaration",
                "src": "346:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "overrides": null,
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 20,
                    "name": "ElementaryTypeName",
                    "src": "371:4:0"
                  }
                ],
                "id": 21,
                "name": "VariableDeclaration",
                "src": "371:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "price",
                  "overrides": null,
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 22,
                    "name": "ElementaryTypeName",
                    "src": "393:4:0"
                  }
                ],
                "id": 23,
                "name": "VariableDeclaration",
                "src": "393:10:0"
              }
            ],
            "id": 24,
            "name": "StructDefinition",
            "src": "259:152:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "f47a0acc",
              "mutability": "mutable",
              "name": "nextOrderID",
              "overrides": null,
              "scope": 134,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 25,
                "name": "ElementaryTypeName",
                "src": "419:4:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 26,
                "name": "Literal",
                "src": "445:1:0"
              }
            ],
            "id": 27,
            "name": "VariableDeclaration",
            "src": "419:27:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "0bb431b6",
              "mutability": "mutable",
              "name": "orderBook",
              "overrides": null,
              "scope": 134,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 28,
                    "name": "ElementaryTypeName",
                    "src": "463:7:0"
                  },
                  {
                    "attributes": {
                      "type": "mapping(uint256 => struct Dex.Order[])"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 29,
                        "name": "ElementaryTypeName",
                        "src": "482:4:0"
                      },
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct Dex.Order[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Order",
                              "referencedDeclaration": 24,
                              "type": "struct Dex.Order"
                            },
                            "id": 30,
                            "name": "UserDefinedTypeName",
                            "src": "490:5:0"
                          }
                        ],
                        "id": 31,
                        "name": "ArrayTypeName",
                        "src": "490:7:0"
                      }
                    ],
                    "id": 32,
                    "name": "Mapping",
                    "src": "474:24:0"
                  }
                ],
                "id": 33,
                "name": "Mapping",
                "src": "455:44:0"
              }
            ],
            "id": 34,
            "name": "VariableDeclaration",
            "src": "455:61:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "ba58ea68",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getOrderBook",
              "overrides": null,
              "scope": 134,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "ticker",
                      "overrides": null,
                      "scope": 54,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 35,
                        "name": "ElementaryTypeName",
                        "src": "547:7:0"
                      }
                    ],
                    "id": 36,
                    "name": "VariableDeclaration",
                    "src": "547:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "side",
                      "overrides": null,
                      "scope": 54,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum Dex.Side",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Side",
                          "referencedDeclaration": 11,
                          "type": "enum Dex.Side"
                        },
                        "id": 37,
                        "name": "UserDefinedTypeName",
                        "src": "563:4:0"
                      }
                    ],
                    "id": 38,
                    "name": "VariableDeclaration",
                    "src": "563:9:0"
                  }
                ],
                "id": 39,
                "name": "ParameterList",
                "src": "546:27:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 54,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Dex.Order[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct Dex.Order[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Order",
                              "referencedDeclaration": 24,
                              "type": "struct Dex.Order"
                            },
                            "id": 40,
                            "name": "UserDefinedTypeName",
                            "src": "594:5:0"
                          }
                        ],
                        "id": 41,
                        "name": "ArrayTypeName",
                        "src": "594:7:0"
                      }
                    ],
                    "id": 42,
                    "name": "VariableDeclaration",
                    "src": "594:14:0"
                  }
                ],
                "id": 43,
                "name": "ParameterList",
                "src": "593:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 43
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Dex.Order storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 34,
                                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))",
                                  "value": "orderBook"
                                },
                                "id": 44,
                                "name": "Identifier",
                                "src": "628:9:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 36,
                                  "type": "bytes32",
                                  "value": "ticker"
                                },
                                "id": 45,
                                "name": "Identifier",
                                "src": "638:6:0"
                              }
                            ],
                            "id": 46,
                            "name": "IndexAccess",
                            "src": "628:17:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Side_$11",
                                      "typeString": "enum Dex.Side"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint",
                                      "type": null
                                    },
                                    "id": 47,
                                    "name": "ElementaryTypeName",
                                    "src": "646:4:0"
                                  }
                                ],
                                "id": 48,
                                "name": "ElementaryTypeNameExpression",
                                "src": "646:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 38,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 49,
                                "name": "Identifier",
                                "src": "651:4:0"
                              }
                            ],
                            "id": 50,
                            "name": "FunctionCall",
                            "src": "646:10:0"
                          }
                        ],
                        "id": 51,
                        "name": "IndexAccess",
                        "src": "628:29:0"
                      }
                    ],
                    "id": 52,
                    "name": "Return",
                    "src": "621:36:0"
                  }
                ],
                "id": 53,
                "name": "Block",
                "src": "610:55:0"
              }
            ],
            "id": 54,
            "name": "FunctionDefinition",
            "src": "525:140:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "6f3b62f9",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createLimitOrder",
              "overrides": null,
              "scope": 134,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "side",
                      "overrides": null,
                      "scope": 133,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum Dex.Side",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Side",
                          "referencedDeclaration": 11,
                          "type": "enum Dex.Side"
                        },
                        "id": 55,
                        "name": "UserDefinedTypeName",
                        "src": "699:4:0"
                      }
                    ],
                    "id": 56,
                    "name": "VariableDeclaration",
                    "src": "699:9:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "ticker",
                      "overrides": null,
                      "scope": 133,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 57,
                        "name": "ElementaryTypeName",
                        "src": "710:7:0"
                      }
                    ],
                    "id": 58,
                    "name": "VariableDeclaration",
                    "src": "710:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "overrides": null,
                      "scope": 133,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 59,
                        "name": "ElementaryTypeName",
                        "src": "726:4:0"
                      }
                    ],
                    "id": 60,
                    "name": "VariableDeclaration",
                    "src": "726:11:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "price",
                      "overrides": null,
                      "scope": 133,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 61,
                        "name": "ElementaryTypeName",
                        "src": "739:4:0"
                      }
                    ],
                    "id": 62,
                    "name": "VariableDeclaration",
                    "src": "739:10:0"
                  }
                ],
                "id": 63,
                "name": "ParameterList",
                "src": "698:52:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 64,
                "name": "ParameterList",
                "src": "758:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 56,
                              "type": "enum Dex.Side",
                              "value": "side"
                            },
                            "id": 65,
                            "name": "Identifier",
                            "src": "772:4:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "BUY",
                              "referencedDeclaration": null,
                              "type": "enum Dex.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "type(enum Dex.Side)",
                                  "value": "Side"
                                },
                                "id": 66,
                                "name": "Identifier",
                                "src": "780:4:0"
                              }
                            ],
                            "id": 67,
                            "name": "MemberAccess",
                            "src": "780:8:0"
                          }
                        ],
                        "id": 68,
                        "name": "BinaryOperation",
                        "src": "772:16:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "type": "function (bool) pure",
                                      "value": "require"
                                    },
                                    "id": 69,
                                    "name": "Identifier",
                                    "src": "805:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "mapping(bytes32 => uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 162,
                                                  "type": "mapping(address => mapping(bytes32 => uint256))",
                                                  "value": "balances"
                                                },
                                                "id": 70,
                                                "name": "Identifier",
                                                "src": "813:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "referencedDeclaration": null,
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": -15,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 71,
                                                    "name": "Identifier",
                                                    "src": "822:3:0"
                                                  }
                                                ],
                                                "id": 72,
                                                "name": "MemberAccess",
                                                "src": "822:10:0"
                                              }
                                            ],
                                            "id": 73,
                                            "name": "IndexAccess",
                                            "src": "813:20:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "455448",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "string",
                                              "type": "literal_string \"ETH\"",
                                              "value": "ETH"
                                            },
                                            "id": 74,
                                            "name": "Literal",
                                            "src": "834:5:0"
                                          }
                                        ],
                                        "id": 75,
                                        "name": "IndexAccess",
                                        "src": "813:27:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "mul",
                                              "referencedDeclaration": 672,
                                              "type": "function (uint256,uint256) pure returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 60,
                                                  "type": "uint256",
                                                  "value": "amount"
                                                },
                                                "id": 76,
                                                "name": "Identifier",
                                                "src": "844:6:0"
                                              }
                                            ],
                                            "id": 77,
                                            "name": "MemberAccess",
                                            "src": "844:10:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 62,
                                              "type": "uint256",
                                              "value": "price"
                                            },
                                            "id": 78,
                                            "name": "Identifier",
                                            "src": "855:5:0"
                                          }
                                        ],
                                        "id": 79,
                                        "name": "FunctionCall",
                                        "src": "844:17:0"
                                      }
                                    ],
                                    "id": 80,
                                    "name": "BinaryOperation",
                                    "src": "813:48:0"
                                  }
                                ],
                                "id": 81,
                                "name": "FunctionCall",
                                "src": "805:57:0"
                              }
                            ],
                            "id": 82,
                            "name": "ExpressionStatement",
                            "src": "805:57:0"
                          }
                        ],
                        "id": 83,
                        "name": "Block",
                        "src": "790:84:0"
                      },
                      {
                        "attributes": {
                          "falseBody": null
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_Side_$11",
                                "typeString": "enum Dex.Side"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 84,
                                "name": "Identifier",
                                "src": "892:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "SELL",
                                  "referencedDeclaration": null,
                                  "type": "enum Dex.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11,
                                      "type": "type(enum Dex.Side)",
                                      "value": "Side"
                                    },
                                    "id": 85,
                                    "name": "Identifier",
                                    "src": "900:4:0"
                                  }
                                ],
                                "id": 86,
                                "name": "MemberAccess",
                                "src": "900:9:0"
                              }
                            ],
                            "id": 87,
                            "name": "BinaryOperation",
                            "src": "892:17:0"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "tuple()",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            -18,
                                            -18
                                          ],
                                          "referencedDeclaration": -18,
                                          "type": "function (bool) pure",
                                          "value": "require"
                                        },
                                        "id": 88,
                                        "name": "Identifier",
                                        "src": "926:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": ">=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "mapping(bytes32 => uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 162,
                                                      "type": "mapping(address => mapping(bytes32 => uint256))",
                                                      "value": "balances"
                                                    },
                                                    "id": 89,
                                                    "name": "Identifier",
                                                    "src": "934:8:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "sender",
                                                      "referencedDeclaration": null,
                                                      "type": "address payable"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": -15,
                                                          "type": "msg",
                                                          "value": "msg"
                                                        },
                                                        "id": 90,
                                                        "name": "Identifier",
                                                        "src": "943:3:0"
                                                      }
                                                    ],
                                                    "id": 91,
                                                    "name": "MemberAccess",
                                                    "src": "943:10:0"
                                                  }
                                                ],
                                                "id": 92,
                                                "name": "IndexAccess",
                                                "src": "934:20:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 58,
                                                  "type": "bytes32",
                                                  "value": "ticker"
                                                },
                                                "id": 93,
                                                "name": "Identifier",
                                                "src": "955:6:0"
                                              }
                                            ],
                                            "id": 94,
                                            "name": "IndexAccess",
                                            "src": "934:28:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 60,
                                              "type": "uint256",
                                              "value": "amount"
                                            },
                                            "id": 95,
                                            "name": "Identifier",
                                            "src": "966:6:0"
                                          }
                                        ],
                                        "id": 96,
                                        "name": "BinaryOperation",
                                        "src": "934:38:0"
                                      }
                                    ],
                                    "id": 97,
                                    "name": "FunctionCall",
                                    "src": "926:47:0"
                                  }
                                ],
                                "id": 98,
                                "name": "ExpressionStatement",
                                "src": "926:47:0"
                              }
                            ],
                            "id": 99,
                            "name": "Block",
                            "src": "911:74:0"
                          }
                        ],
                        "id": 100,
                        "name": "IfStatement",
                        "src": "889:96:0"
                      }
                    ],
                    "id": 101,
                    "name": "IfStatement",
                    "src": "769:216:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        105
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "orders",
                          "overrides": null,
                          "scope": 132,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Dex.Order[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "struct Dex.Order[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "contractScope": null,
                                  "name": "Order",
                                  "referencedDeclaration": 24,
                                  "type": "struct Dex.Order"
                                },
                                "id": 103,
                                "name": "UserDefinedTypeName",
                                "src": "995:5:0"
                              }
                            ],
                            "id": 104,
                            "name": "ArrayTypeName",
                            "src": "995:7:0"
                          }
                        ],
                        "id": 105,
                        "name": "VariableDeclaration",
                        "src": "995:22:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Dex.Order storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 34,
                                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))",
                                  "value": "orderBook"
                                },
                                "id": 106,
                                "name": "Identifier",
                                "src": "1020:9:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 58,
                                  "type": "bytes32",
                                  "value": "ticker"
                                },
                                "id": 107,
                                "name": "Identifier",
                                "src": "1030:6:0"
                              }
                            ],
                            "id": 108,
                            "name": "IndexAccess",
                            "src": "1020:17:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Side_$11",
                                      "typeString": "enum Dex.Side"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint",
                                      "type": null
                                    },
                                    "id": 109,
                                    "name": "ElementaryTypeName",
                                    "src": "1038:4:0"
                                  }
                                ],
                                "id": 110,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1038:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 111,
                                "name": "Identifier",
                                "src": "1043:4:0"
                              }
                            ],
                            "id": 112,
                            "name": "FunctionCall",
                            "src": "1038:10:0"
                          }
                        ],
                        "id": 113,
                        "name": "IndexAccess",
                        "src": "1020:29:0"
                      }
                    ],
                    "id": 114,
                    "name": "VariableDeclarationStatement",
                    "src": "995:54:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                                  "typeString": "struct Dex.Order memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct Dex.Order storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 105,
                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                  "value": "orders"
                                },
                                "id": 115,
                                "name": "Identifier",
                                "src": "1060:6:0"
                              }
                            ],
                            "id": 117,
                            "name": "MemberAccess",
                            "src": "1060:11:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "struct Dex.Order memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Side_$11",
                                      "typeString": "enum Dex.Side"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24,
                                  "type": "type(struct Dex.Order storage pointer)",
                                  "value": "Order"
                                },
                                "id": 118,
                                "name": "Identifier",
                                "src": "1086:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 27,
                                  "type": "uint256",
                                  "value": "nextOrderID"
                                },
                                "id": 119,
                                "name": "Identifier",
                                "src": "1092:11:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 120,
                                    "name": "Identifier",
                                    "src": "1105:3:0"
                                  }
                                ],
                                "id": 121,
                                "name": "MemberAccess",
                                "src": "1105:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 122,
                                "name": "Identifier",
                                "src": "1117:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 58,
                                  "type": "bytes32",
                                  "value": "ticker"
                                },
                                "id": 123,
                                "name": "Identifier",
                                "src": "1123:6:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 60,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 124,
                                "name": "Identifier",
                                "src": "1131:6:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 62,
                                  "type": "uint256",
                                  "value": "price"
                                },
                                "id": 125,
                                "name": "Identifier",
                                "src": "1139:5:0"
                              }
                            ],
                            "id": 126,
                            "name": "FunctionCall",
                            "src": "1086:59:0"
                          }
                        ],
                        "id": 127,
                        "name": "FunctionCall",
                        "src": "1060:100:0"
                      }
                    ],
                    "id": 128,
                    "name": "ExpressionStatement",
                    "src": "1060:100:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27,
                              "type": "uint256",
                              "value": "nextOrderID"
                            },
                            "id": 129,
                            "name": "Identifier",
                            "src": "1171:11:0"
                          }
                        ],
                        "id": 130,
                        "name": "UnaryOperation",
                        "src": "1171:13:0"
                      }
                    ],
                    "id": 131,
                    "name": "ExpressionStatement",
                    "src": "1171:13:0"
                  }
                ],
                "id": 132,
                "name": "Block",
                "src": "758:438:0"
              }
            ],
            "id": 133,
            "name": "FunctionDefinition",
            "src": "673:523:0"
          }
        ],
        "id": 134,
        "name": "ContractDefinition",
        "src": "133:1069:0"
      }
    ],
    "id": 135,
    "name": "SourceUnit",
    "src": "33:1171:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xFA36E9AA963Ff4d4593c6B57E95d68beaCF2F149",
      "transactionHash": "0xe4167f8c9d3dcae192e469f62e6c1c8e1fb63eb41e4d5dab987f733bc7888069"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-30T02:05:18.312Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}